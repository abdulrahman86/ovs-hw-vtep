<?xml version="1.0" encoding="utf-8"?>
<database title="Hardware VTEP Database">
  <p>
    This schema specifies relations that a VTEP can use to integrate
    physical ports into logical switches maintained by a network
    virtualization controller such as NVP.
  </p>
  
  <p>Glossary:</p>

  <dl>
    <dt>VTEP</dt>
    <dd>
      VXLAN Tunnel End Point, an entity which originates and/or terminates
      VXLAN tunnels.
    </dd>

    <dt>HSC</dt>
    <dd>
      Hardware Switch Controller.
    </dd>

    <dt>NVC</dt>
    <dd>
      Network Virtualization Controller, e.g. NVP.
    </dd>
  </dl>

  <table name="Global" title="Top-level configuration.">
    Top-level configuration for a hardware VTEP.  There must be
    exactly one record in the <ref table="Global"/> table.

    <column name="switches">
      The physical switches managed by the VTEP.
    </column>

    <group title="Database Configuration">
      <p>
        These columns primarily configure the Open vSwitch database
        (<code>ovsdb-server</code>), not the hardware VTEP itself.
      </p>

      <column name="managers">
        Database clients to which the Open vSwitch database server should
        connect or to which it should listen, along with options for how these
        connection should be configured.  See the <ref table="Manager"/> table
        for more information.
      </column>
    </group>
  </table>

  <table name="Physical_Switch" title="A physical switch.">
    A physical switch that implements a VTEP.

    <column name="ports">
      The physical ports within the switch.
    </column>

    <group title="Network Status">
      <column name="management_ips">
        IPv4 or IPv6 addresses at which the switch may be contacted
        for management purposes.
      </column>

      <column name="tunnel_ips">
        <p>
          IPv4 or IPv6 addresses on which the switch may originate or
          terminate tunnels.
        </p>

        <p>
          This column is intended to allow a <ref table="Manager"/> to
          determine the <ref table="Physical_Switch"/> that terminates
          the tunnel represented by a <ref table="Physical_Locator"/>.
        </p>
      </column>
    </group>

    <group title="Identification">
      <column name="name">
	Symbolic name for the switch, such as its hostname.
      </column>
      
      <column name="description">
	An extended description for the switch, such as its switch login
	banner.
      </column>
    </group>
  </table>

  <table name="Physical_Port" title="A port within a physical switch.">
    A port within a <ref table="Physical_Switch"/>.

    <column name="vlan_logical_bindings">
      <p>
        Identifies a binding of VLANs on the physical port to logical switches.
        If, for example, the map contains a (VLAN, logical switch) pair, a
        packet that arrives on the port in the VLAN is considered to belong to
        the paired logical switch.
      </p>

      <p>
        The column's value type is <ref table="Logical_Binding"/> rather than
        <ref table="Logical_Switch"/> to allow statistics to be associated with
        the binding.
      </p>        
    </column>

    <group title="Identification">
      <column name="name">
	Symbolic name for the port.  The name ought to be unique within a given
	<ref table="Physical_Switch"/>, but the database is not capable of
	enforcing this.
      </column>
      
      <column name="description">
	An extended description for the port.
      </column>
    </group>
  </table>

  <table name="Logical_Binding" title="Binds a VLAN on a physical port to a logical network.">
    Identifies the <ref table="Logical_Switch"/> with which a VLAN on a <ref
    table="Physical_Port"/> is associated.

    <column name="logical_switch"/>

    <group title="Statistics">
      These statistics count only packets to which the binding applies.

      <column name="packets_from_local">
        Number of packets sent by the <ref table="Physical_Switch"/>.
      </column>

      <column name="bytes_from_local">
        Number of bytes in packets sent by the <ref table="Physical_Switch"/>.
      </column>

      <column name="packets_to_local">
        Number of packets received by the <ref table="Physical_Switch"/>.
      </column>

      <column name="bytes_to_local">
        Number of bytes in packets received by the <ref
        table="Physical_Switch"/>.
      </column>
    </group>
  </table>

  <table name="Logical_Switch" title="A layer-2 domain.">
    A logical Ethernet switch, whose implementation may span physical and
    virtual media, possibly crossing L3 domains via tunnels; a logical layer-2
    domain; an Ethernet broadcast domain.

    <column name="mac_locations">
      <p>
        Identifies the physical location or locations at which given
        Ethernet addresses are known to reside, functioning in a way
        analogous to a MAC learning table for a logical switch.
      </p>

      <p>
        Unicast Ethernet addresses should map to <ref
        table="Physical_Locator_Set"/> records that point to exactly
        one <ref table="Physical_Locator"/> record.  Multicast and
        broadcast Ethernet addresses may map to <ref
        table="Physical_Locator_Set"/> records that point more than
        one <ref table="Physical_Locator"/> record.
      </p>

      <p>
        The keyword <code>unknown-dst</code> is used as a special
        ``Ethernet address'' that indicates the locations to which
        packets in a logical switch whose destination addresses do not
        otherwise appear in <ref column="mac_locations"/> should be
        sent.
      </p>
    </column>

    <column name="ip_to_mac">
      Maps from an IPv4 or IPv6 address to the MAC address at which it
      resides.  (Using the inverse map, from MAC address to IP
      address, would make it impossible to associate both an IPv4 and
      IPv6 address, or multiple IPv4 or IPv6 addresses, with a single
      MAC.)
    </column>

    <group title="Per Logical-Switch Key">
      <p>
        Tunnel protocols tend to have a field that allows the tunnel to be
        partitioned into sub-tunnels: VXLAN has a VNI, GRE and STT have a key,
        CAPWAP has a WSI, and so on.  We call these generically ``keys.''
        Given that one needs to use a key at all, there are at two reasonable
        ways to assign their values:
      </p>

      <ul>
        <li>
          <p>
            Per <ref table="Logical_Switch"/>+<ref table="Physical_Locator"/>
            pair.  That is, each logical switch may be assigned a different key
            on every <ref table="Physical_Locator"/>.  This model is especially
            flexible.
          </p>

          <p>
            In this model, <ref table="Physical_Locator"/> carries the key
            data.  Therefore, one <ref table="Physical_Locator"/> record will
            exist for each logical switch carried at a given IP destination.
          </p>
        </li>

        <li>
          <p>
            Per <ref table="Logical_Switch"/>.  That is, every tunnel
            associated with a particular logical switch carries the same key,
            regardless of the <ref table="Physical_Locator"/> to which the
            tunnel is addressed.  This model may ease switch implementation
            because it imposes fewer requirements on the hardware datapath.
          </p>

          <p>
            In this model, <ref table="Logical_Switch"/> carries the key data.
            Therefore, one <ref table="Physical_Locator"/> record will exist
            for each IP destination.
          </p>
        </li>
      </ul>

      <column name="key">
        <p>
          This column is used only in the key per <ref table="Logical_Switch"/>
          model (see above), because only in that model is there a key
          associated with a logical switch.
        </p>

        <p>
          For <code>vxlan_over_ipv4</code> encapsulation, this column
          is the VXLAN VNI that identifies a logical switch.  It must
          be in the range 0 to 16,777,215.
        </p>
      </column>
    </group>

    <group title="Identification">
      <column name="name">
	Symbolic name for the logical switch.
      </column>
      
      <column name="description">
	An extended description for the logical switch, such as its switch
	login banner.
      </column>
    </group>
  </table>

  <table name="Physical_Locator_Set">
    <p>
      A set of one or more <ref table="Physical_Locator"/>s.
    </p>

    <p>
      This table exists only because OVSDB does not have a way to
      express the type ``map from string to one or more <ref
      table="Physical_Locator"/> records.''
    </p>

    <column name="locators"/>    
  </table>

  <table name="Physical_Locator">
    <p>
      Identifies an endpoint to which logical switch traffic may be
      encapsulated and forwarded.
    </p>

    <p>
      For the <code>vxlan_over_ipv4</code> encapsulation, the only
      encapsulation defined so far, all endpoints associated with a given <ref
      table="Logical_Switch"/> must use a common tunnel key, which is carried
      in the <ref table="Logical_Switch" column="key"/> column of <ref
      table="Logical_Switch"/>.
    </p>

    <p>
      For some encapsulations yet to be defined, we expect <ref
      table="Physical_Locator"/> to identify both an endpoint and a tunnel key.
      When the first such encapsulation is defined, we expect to add a ``key''
      column to <ref table="Physical_Locator"/> to allow the tunnel key to be
      defined.
    </p>

    <p>
      See the ``Per Logical-Switch Key'' section in the <ref
      table="Logical_Switch"/> table for further discussion of the model.
    </p>

    <column name="encapsulation_type">
      The type of tunneling encapsulation.
    </column>

    <column name="dst_ip">
      <p>
        For <code>vxlan_over_ipv4</code> encapsulation, the IPv4 address of the
        VXLAN tunnel endpoint.
      </p>

      <p>
        We expect that this column could be used for IPv4 or IPv6 addresses in
        encapsulations to be introduced later.
      </p>
    </column>
  </table>

</database>
