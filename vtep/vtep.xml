<?xml version="1.0" encoding="utf-8"?>
<database title="Hardware VTEP Database">
  <p>
    This schema specifies relations that a VTEP can use to integrate
    physical ports into logical switches maintained by a network
    virtualization controller such as NVP.
  </p>
  
  <p>Glossary:</p>

  <dl>
    <dt>VTEP</dt>
    <dd>
      VXLAN Tunnel End Point, an entity which originates and/or terminates
      VXLAN tunnels.
    </dd>

    <dt>HSC</dt>
    <dd>
      Hardware Switch Controller.
    </dd>

    <dt>NVC</dt>
    <dd>
      Network Virtualization Controller, e.g. NVP.
    </dd>
  </dl>

  <table name="Global" title="Top-level configuration.">
    Top-level configuration for a hardware VTEP.  There must be
    exactly one record in the <ref table="Global"/> table.

    <column name="switches">
      The physical switches managed by the VTEP.
    </column>

    <group title="Database Configuration">
      <p>
        These columns primarily configure the Open vSwitch database
        (<code>ovsdb-server</code>), not the hardware VTEP itself.
      </p>

      <column name="managers">
        Database clients to which the Open vSwitch database server should
        connect or to which it should listen, along with options for how these
        connection should be configured.  See the <ref table="Manager"/> table
        for more information.
      </column>
    </group>
  </table>

  <table name="Physical_Switch" title="A physical switch.">
    A physical switch within the domain of the VTEP.

    <column name="ports">
      The physical ports within the switch.
    </column>

    <group title="Identification">
      <column name="name">
	Symbolic name for the switch, such as its hostname.
      </column>
      
      <column name="description">
	An extended description for the switch, such as its switch login
	banner.
      </column>
    </group>
  </table>

  <table name="Physical_Port" title="A port within a physical switch.">
    A port within a <ref table="Physical_Switch"/>.

    <column name="vlan_to_logical_switch">
      Identifies a binding of logical switch to VLANs on the physical port.
      If, for example, the map contains a (VLAN, logical switch) pair, a
      packet that arrives on the port in the VLAN is considered to belong to
      the paired logical switch.
    </column>

    <group title="Identification">
      <column name="name">
	Symbolic name for the port.  The name ought to be unique within a given
	<ref table="Physical_Switch"/>, but the database is not capable of
	enforcing this.
      </column>
      
      <column name="description">
	An extended description for the port.
      </column>
    </group>
  </table>

  <table name="Logical_Switch" title="A layer-2 domain.">
    A logical Ethernet switch, whose implementation may span physical and
    virtual media, possibly crossing L3 domains via tunnels; a logical layer-2
    domain; an Ethernet broadcast domain.

    <column name="mac_locations">
      Identifies the physical location at which given Ethernet unicast,
      multicast, or broadcast addresses are known to reside, functioning in a
      way analogous to a MAC learning table for a logical switch.
    </column>

    <column name="ipv4_locations">
      Identifies the physical location at which given IPv4 addresses are known
      to reside, allowing for ARP suppression.
    </column>

    <column name="ipv6_locations">
      Identifies the physical location at which given IPv6 addresses are known
      to reside, allowing for IPv6 neighbor discovery suppression.
    </column>

    <group title="Per Logical-Switch Key">
      <p>
        Tunnel protocols tend to have a field that allows the tunnel to be
        partitioned into sub-tunnels: VXLAN has a VNI, GRE and STT have a key,
        CAPWAP has a WSI, and so on.  We call these generically ``keys.''
        Given that one needs to use a key at all, there are at two reasonable
        ways to assign their values:
      </p>

      <ul>
        <li>
          <p>
            Per <ref table="Logical_Switch"/>+<ref table="Physical_Locator"/>
            pair.  That is, each logical switch may be assigned a different key
            on every <ref table="Physical_Locator"/>.  This model is especially
            flexible.
          </p>

          <p>
            In this model, <ref table="Physical_Locator"/> carries the key
            data.  Therefore, one <ref table="Physical_Locator"/> record will
            exist for each logical switch carried at a given IP destination.
          </p>
        </li>

        <li>
          <p>
            Per <ref table="Logical_Switch"/>.  That is, every tunnel
            associated with a particular logical switch carries the same key,
            regardless of the <ref table="Physical_Locator"/> to which the
            tunnel is addressed.  This model may ease switch implementation
            because it imposes fewer requirements on the hardware datapath.
          </p>

          <p>
            In this model, <ref table="Logical_Switch"/> carries the key data.
            Therefore, one <ref table="Physical_Locator"/> record will exist
            for each IP destination.
          </p>
        </li>
      </ul>

      <column name="key">
        <p>
          This column is used only in the key per <ref table="Logical_Switch"/>
          model (see above), because only in that model is there a key
          associated with a logical switch.
        </p>

        <p>
          For <code>vxlan_over_ipv4</code> encapsulation, this column
          is the VXLAN VNI that identifies a logical switch.  It must
          be in the range 0 to 16,777,215.
        </p>
      </column>
    </group>

    <group title="Identification">
      <column name="name">
	Symbolic name for the logical switch.
      </column>
      
      <column name="description">
	An extended description for the logical switch, such as its switch
	login banner.
      </column>
    </group>
  </table>

  <table name="Physical_Locator">
    <p>
      Identifies an endpoint to which logical switch traffic may be
      encapsulated and forwarded.
    </p>

    <p>
      For the <code>vxlan_over_ipv4</code> encapsulation, the only
      encapsulation defined so far, all endpoints associated with a given <ref
      table="Logical_Switch"/> must use a common tunnel key, which is carried
      in the <ref table="Logical_Switch" column="key"/> column of <ref
      table="Logical_Switch"/>.
    </p>

    <p>
      For some encapsulations yet to be defined, we expect <ref
      table="Physical_Locator"/> to identify both an endpoint and a tunnel key.
      When the first such encapsulation is defined, we expect to add a ``key''
      column to <ref table="Physical_Locator"/> to allow the tunnel key to be
      defined.
    </p>

    <p>
      See the ``Per Logical-Switch Key'' section in the <ref
      table="Logical_Switch"/> table for further discussion of the model.
    </p>

    <column name="encapsulation_type">
      The type of tunneling encapsulation.
    </column>

    <column name="dst_ip">
      <p>
        For <code>vxlan_over_ipv4</code> encapsulation, the IPv4 address of the
        VXLAN tunnel endpoint.
      </p>

      <p>
        We expect that this column could be used for IPv4 or IPv6 addresses in
        encapsulations to be introduced later.
      </p>
    </column>
  </table>

</database>
